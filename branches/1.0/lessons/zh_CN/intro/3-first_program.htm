<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel='stylesheet' href='../rurple.css' type='text/css'>
<title>第一个程序</title>
</head>
<body>
<h2 class="title">3. 第一个程序</h2>
<p>按照前面提及的，有两个主要的窗口与Reeborg进行交互。你可以在左边的程序窗口写下指令让Reeborg去执行。在右边的“图形世界”窗口中可以看到Reeborg按照指令的运动情况。</p>
<p>点击打开程序按钮 <img alt="open program button" src=
"../../images/intro/btn_open_program.png"> 然后选择“move1.rur”文件。（提示：按照您计算机本身的设定，您可能会看不到“rur”的扩展名。）然后你会在程序窗口中看到如下的<em>计算机代码</em>。</p>
<pre>
move()
turn_off()
</pre>
<p><em>代码</em>这个词可以解释为程序文字，一个程序就是一系列的指令组合。在这个例子中，代码由两个<em>指令</em>组成。</p>
<ul>
<li><tt>move()</tt>: 指示Reeborg向前移动一步。<br></li>
<li><tt>turn_off()</tt>: 告诉Reeborg，接下来我们没有指令给他，他可以关掉自己以节省能量。</li>
</ul>
<p>Reeborg认为这些以圆括号结尾单词指令是命令，他必须遵照这些命令来行动。</p>
<p>现在，点击 <img alt="run program button" src=
"../../images/intro/btn_run.png">按钮观察Reeborg在他的世界中怎么运动吧。</p>
<h3 class="try">轮到你时</h3>
<p>在程序中添加第二个<tt>move()</tt>指令，如下所示：</p>
<pre>
move()
move()
turn_off()
</pre>
<p>点击保存按钮 <img alt="save program button" src=
"../../images/intro/btn_save_program.png"> 把这个文件命名为“move2”（程序会自动加上“.rur”文件后缀）。祝贺你，你已经建立了你的第一个程序。现在，点击按钮<img alt="run program button"
src="../../images/intro/btn_run.png">让Reeborg<em>执行</em>这个程序。</p>
<h3 class="suggested">试验一下！</h3>
<p>你可以让Reeborg多走两步。如果你试图让Reeborg穿过世界的边界线会发生什么情况？尤其需要注意程序窗口；你会注意到那些正在被Reeborg执行的指令会以高亮显示。</p>
<center>
<a href="2-explore.htm"><img alt="previous" src=
"../../images/previous.png"> Reeborg探索世界</a> - <a href=
"../lessons_toc.htm"><img alt="home" src="../../images/home.png"></a> - <a href=
"4-errors.htm">错误处理 <img alt="next" src=
"../../images/next.png"></a>
</center>
<BR>
<BR>
</body>
</html>

